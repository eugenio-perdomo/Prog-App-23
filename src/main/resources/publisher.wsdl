<?xml version='1.0' encoding='UTF-8'?><!-- Published by XML-WS Runtime (https://github.com/eclipse-ee4j/metro-jax-ws). Runtime's version is XML-WS Runtime 4.0.0 git-revision#129f787. --><!-- Generated by XML-WS Runtime (https://github.com/eclipse-ee4j/metro-jax-ws). Runtime's version is XML-WS Runtime 4.0.0 git-revision#129f787. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="controller" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="controller" name="PublisherService">
<types>
<xsd:schema>
<xsd:import namespace="controller" schemaLocation="http://localhost:8181/controller?xsd=1"/>
</xsd:schema>
</types>
<message name="getProviderList"/>
<message name="getProviderListResponse">
<part name="providerList" type="tns:dtProviderWSArray"/>
</message>
<message name="checkCredentials">
<part name="userEmail" type="xsd:string"/>
<part name="userPassword" type="xsd:string"/>
</message>
<message name="checkCredentialsResponse">
<part name="userData" type="tns:dtUserWS"/>
</message>
<message name="existsNick">
<part name="nickname" type="xsd:string"/>
</message>
<message name="existsNickResponse">
<part name="existsNick" type="xsd:boolean"/>
</message>
<message name="existsEmail">
<part name="email" type="xsd:string"/>
</message>
<message name="existsEmailResponse">
<part name="existsEmail" type="xsd:boolean"/>
</message>
<message name="existsName">
<part name="name" type="xsd:string"/>
<part name="entity" type="tns:entityType"/>
</message>
<message name="existsNameResponse">
<part name="existsName" type="xsd:boolean"/>
</message>
<message name="filterByString">
<part name="strToFind" type="xsd:string"/>
</message>
<message name="filterByStringResponse">
<part name="activityAndBundle" type="tns:dtBaseEntityWSArray"/>
</message>
<message name="getListUser"/>
<message name="getListUserResponse">
<part name="userList" type="tns:dtUserWSArray"/>
</message>
<message name="getTouristList"/>
<message name="getTouristListResponse">
<part name="touristList" type="tns:dtTouristWSArray"/>
</message>
<message name="getUserData">
<part name="userId" type="xsd:long"/>
</message>
<message name="getUserDataResponse">
<part name="userData" type="tns:dtUserWS"/>
</message>
<message name="updateUser">
<part name="userData" type="tns:dtUserWS"/>
</message>
<message name="updateUserResponse"/>
<message name="followUser">
<part name="userFollwer" type="xsd:long"/>
<part name="userToFollow" type="xsd:long"/>
</message>
<message name="followUserResponse"/>
<message name="unFollowUser">
<part name="userFollwer" type="xsd:long"/>
<part name="userToUnfollow" type="xsd:long"/>
</message>
<message name="unFollowUserResponse"/>
<message name="markFavoriteActivty">
<part name="userId" type="xsd:long"/>
<part name="activityToMark" type="xsd:long"/>
</message>
<message name="markFavoriteActivtyResponse"/>
<message name="unMarkFavoriteActivity">
<part name="userId" type="xsd:long"/>
<part name="activityToUnmark" type="xsd:long"/>
</message>
<message name="unMarkFavoriteActivityResponse"/>
<message name="registerUser">
<part name="userData" type="tns:dtUserWS"/>
</message>
<message name="registerUserResponse"/>
<message name="registeTouristicActivity">
<part name="activityData" type="tns:dtTouristicActivityWS"/>
</message>
<message name="registeTouristicActivityResponse"/>
<message name="registerTouristicDeparture">
<part name="departureData" type="tns:dtTouristicDepartureWS"/>
</message>
<message name="registerTouristicDepartureResponse"/>
<message name="registerTouristicBundle">
<part name="bundleData" type="tns:dtTouristicBundleWS"/>
</message>
<message name="registerTouristicBundleResponse"/>
<message name="registerDepartment">
<part name="departmentData" type="tns:dtDepartmentWS"/>
</message>
<message name="registerDepartmentResponse"/>
<message name="registerInscription">
<part name="inscriptionData" type="tns:dtInscriptionWS"/>
</message>
<message name="registerInscriptionResponse"/>
<message name="registerCategory">
<part name="categoryData" type="tns:dtCategoryWS"/>
</message>
<message name="registerCategoryResponse"/>
<message name="registerPurchase">
<part name="purchaseData" type="tns:dtPurchaseWS"/>
</message>
<message name="registerPurchaseResponse"/>
<message name="getListDepartment">
<part name="withActivities?" type="xsd:boolean"/>
</message>
<message name="getListDepartmentResponse">
<part name="departmentsList" type="tns:dtDepartmentWSArray"/>
</message>
<message name="getTouristicActivityData">
<part name="activityId" type="xsd:long"/>
</message>
<message name="getTouristicActivityDataResponse">
<part name="activityData" type="tns:dtTouristicActivityWS"/>
</message>
<message name="getDeparturesByActivity">
<part name="activityId" type="xsd:long"/>
</message>
<message name="getDeparturesByActivityResponse">
<part name="departuresByActivity" type="tns:dtTouristicDepartureWSArray"/>
</message>
<message name="getListTouristicDeparture"/>
<message name="getListTouristicDepartureResponse">
<part name="departuresList" type="tns:dtTouristicDepartureWSArray"/>
</message>
<message name="getListTouristicBundle"/>
<message name="getListTouristicBundleResponse">
<part name="bundleList" type="tns:dtTouristicBundleWSArray"/>
</message>
<message name="getTouristicBundleData">
<part name="bundleId" type="xsd:long"/>
</message>
<message name="getTouristicBundleDataResponse">
<part name="bundleList" type="tns:dtTouristicBundleWS"/>
</message>
<message name="addTouristicActivityToBundle">
<part name="bundleId" type="xsd:long"/>
<part name="activityId" type="xsd:long"/>
</message>
<message name="addTouristicActivityToBundleResponse"/>
<message name="getTouristicDepartureData">
<part name="departureId" type="xsd:long"/>
</message>
<message name="getTouristicDepartureDataResponse">
<part name="departureData" type="tns:dtTouristicDepartureWS"/>
</message>
<message name="getListCategory"/>
<message name="getListCategoryResponse">
<part name="categoryList" type="tns:dtCategoryWSArray"/>
</message>
<message name="changeActivityState">
<part name="activityId" type="xsd:long"/>
<part name="activityState" type="tns:activityState"/>
</message>
<message name="changeActivityStateResponse"/>
<message name="getListActivityStated">
<part name="activityState" type="tns:activityState"/>
</message>
<message name="getListActivityStatedResponse">
<part name="activitiesByState" type="tns:dtTouristicActivityWSArray"/>
</message>
<message name="getPurchase">
<part name="purchaseId" type="xsd:long"/>
</message>
<message name="getPurchaseResponse">
<part name="purchaseData" type="tns:dtPurchaseWS"/>
</message>
<message name="getPurchaseList"/>
<message name="getPurchaseListResponse">
<part name="purchaseList" type="tns:dtPurchaseWSArray"/>
</message>
<portType name="Publisher">
<operation name="getProviderList">
<input wsam:Action="controller/Publisher/getProviderListRequest" message="tns:getProviderList"/>
<output wsam:Action="controller/Publisher/getProviderListResponse" message="tns:getProviderListResponse"/>
</operation>
<operation name="checkCredentials" parameterOrder="userEmail userPassword">
<input wsam:Action="controller/Publisher/checkCredentialsRequest" message="tns:checkCredentials"/>
<output wsam:Action="controller/Publisher/checkCredentialsResponse" message="tns:checkCredentialsResponse"/>
</operation>
<operation name="existsNick">
<input wsam:Action="controller/Publisher/existsNickRequest" message="tns:existsNick"/>
<output wsam:Action="controller/Publisher/existsNickResponse" message="tns:existsNickResponse"/>
</operation>
<operation name="existsEmail">
<input wsam:Action="controller/Publisher/existsEmailRequest" message="tns:existsEmail"/>
<output wsam:Action="controller/Publisher/existsEmailResponse" message="tns:existsEmailResponse"/>
</operation>
<operation name="existsName" parameterOrder="name entity">
<input wsam:Action="controller/Publisher/existsNameRequest" message="tns:existsName"/>
<output wsam:Action="controller/Publisher/existsNameResponse" message="tns:existsNameResponse"/>
</operation>
<operation name="filterByString">
<input wsam:Action="controller/Publisher/filterByStringRequest" message="tns:filterByString"/>
<output wsam:Action="controller/Publisher/filterByStringResponse" message="tns:filterByStringResponse"/>
</operation>
<operation name="getListUser">
<input wsam:Action="controller/Publisher/getListUserRequest" message="tns:getListUser"/>
<output wsam:Action="controller/Publisher/getListUserResponse" message="tns:getListUserResponse"/>
</operation>
<operation name="getTouristList">
<input wsam:Action="controller/Publisher/getTouristListRequest" message="tns:getTouristList"/>
<output wsam:Action="controller/Publisher/getTouristListResponse" message="tns:getTouristListResponse"/>
</operation>
<operation name="getUserData">
<input wsam:Action="controller/Publisher/getUserDataRequest" message="tns:getUserData"/>
<output wsam:Action="controller/Publisher/getUserDataResponse" message="tns:getUserDataResponse"/>
</operation>
<operation name="updateUser">
<input wsam:Action="controller/Publisher/updateUserRequest" message="tns:updateUser"/>
<output wsam:Action="controller/Publisher/updateUserResponse" message="tns:updateUserResponse"/>
</operation>
<operation name="followUser" parameterOrder="userFollwer userToFollow">
<input wsam:Action="controller/Publisher/followUserRequest" message="tns:followUser"/>
<output wsam:Action="controller/Publisher/followUserResponse" message="tns:followUserResponse"/>
</operation>
<operation name="unFollowUser" parameterOrder="userFollwer userToUnfollow">
<input wsam:Action="controller/Publisher/unFollowUserRequest" message="tns:unFollowUser"/>
<output wsam:Action="controller/Publisher/unFollowUserResponse" message="tns:unFollowUserResponse"/>
</operation>
<operation name="markFavoriteActivty" parameterOrder="userId activityToMark">
<input wsam:Action="controller/Publisher/markFavoriteActivtyRequest" message="tns:markFavoriteActivty"/>
<output wsam:Action="controller/Publisher/markFavoriteActivtyResponse" message="tns:markFavoriteActivtyResponse"/>
</operation>
<operation name="unMarkFavoriteActivity" parameterOrder="userId activityToUnmark">
<input wsam:Action="controller/Publisher/unMarkFavoriteActivityRequest" message="tns:unMarkFavoriteActivity"/>
<output wsam:Action="controller/Publisher/unMarkFavoriteActivityResponse" message="tns:unMarkFavoriteActivityResponse"/>
</operation>
<operation name="registerUser">
<input wsam:Action="controller/Publisher/registerUserRequest" message="tns:registerUser"/>
<output wsam:Action="controller/Publisher/registerUserResponse" message="tns:registerUserResponse"/>
</operation>
<operation name="registeTouristicActivity">
<input wsam:Action="controller/Publisher/registeTouristicActivityRequest" message="tns:registeTouristicActivity"/>
<output wsam:Action="controller/Publisher/registeTouristicActivityResponse" message="tns:registeTouristicActivityResponse"/>
</operation>
<operation name="registerTouristicDeparture">
<input wsam:Action="controller/Publisher/registerTouristicDepartureRequest" message="tns:registerTouristicDeparture"/>
<output wsam:Action="controller/Publisher/registerTouristicDepartureResponse" message="tns:registerTouristicDepartureResponse"/>
</operation>
<operation name="registerTouristicBundle">
<input wsam:Action="controller/Publisher/registerTouristicBundleRequest" message="tns:registerTouristicBundle"/>
<output wsam:Action="controller/Publisher/registerTouristicBundleResponse" message="tns:registerTouristicBundleResponse"/>
</operation>
<operation name="registerDepartment">
<input wsam:Action="controller/Publisher/registerDepartmentRequest" message="tns:registerDepartment"/>
<output wsam:Action="controller/Publisher/registerDepartmentResponse" message="tns:registerDepartmentResponse"/>
</operation>
<operation name="registerInscription">
<input wsam:Action="controller/Publisher/registerInscriptionRequest" message="tns:registerInscription"/>
<output wsam:Action="controller/Publisher/registerInscriptionResponse" message="tns:registerInscriptionResponse"/>
</operation>
<operation name="registerCategory">
<input wsam:Action="controller/Publisher/registerCategoryRequest" message="tns:registerCategory"/>
<output wsam:Action="controller/Publisher/registerCategoryResponse" message="tns:registerCategoryResponse"/>
</operation>
<operation name="registerPurchase">
<input wsam:Action="controller/Publisher/registerPurchaseRequest" message="tns:registerPurchase"/>
<output wsam:Action="controller/Publisher/registerPurchaseResponse" message="tns:registerPurchaseResponse"/>
</operation>
<operation name="getListDepartment">
<input wsam:Action="controller/Publisher/getListDepartmentRequest" message="tns:getListDepartment"/>
<output wsam:Action="controller/Publisher/getListDepartmentResponse" message="tns:getListDepartmentResponse"/>
</operation>
<operation name="getTouristicActivityData">
<input wsam:Action="controller/Publisher/getTouristicActivityDataRequest" message="tns:getTouristicActivityData"/>
<output wsam:Action="controller/Publisher/getTouristicActivityDataResponse" message="tns:getTouristicActivityDataResponse"/>
</operation>
<operation name="getDeparturesByActivity">
<input wsam:Action="controller/Publisher/getDeparturesByActivityRequest" message="tns:getDeparturesByActivity"/>
<output wsam:Action="controller/Publisher/getDeparturesByActivityResponse" message="tns:getDeparturesByActivityResponse"/>
</operation>
<operation name="getListTouristicDeparture">
<input wsam:Action="controller/Publisher/getListTouristicDepartureRequest" message="tns:getListTouristicDeparture"/>
<output wsam:Action="controller/Publisher/getListTouristicDepartureResponse" message="tns:getListTouristicDepartureResponse"/>
</operation>
<operation name="getListTouristicBundle">
<input wsam:Action="controller/Publisher/getListTouristicBundleRequest" message="tns:getListTouristicBundle"/>
<output wsam:Action="controller/Publisher/getListTouristicBundleResponse" message="tns:getListTouristicBundleResponse"/>
</operation>
<operation name="getTouristicBundleData">
<input wsam:Action="controller/Publisher/getTouristicBundleDataRequest" message="tns:getTouristicBundleData"/>
<output wsam:Action="controller/Publisher/getTouristicBundleDataResponse" message="tns:getTouristicBundleDataResponse"/>
</operation>
<operation name="addTouristicActivityToBundle" parameterOrder="bundleId activityId">
<input wsam:Action="controller/Publisher/addTouristicActivityToBundleRequest" message="tns:addTouristicActivityToBundle"/>
<output wsam:Action="controller/Publisher/addTouristicActivityToBundleResponse" message="tns:addTouristicActivityToBundleResponse"/>
</operation>
<operation name="getTouristicDepartureData">
<input wsam:Action="controller/Publisher/getTouristicDepartureDataRequest" message="tns:getTouristicDepartureData"/>
<output wsam:Action="controller/Publisher/getTouristicDepartureDataResponse" message="tns:getTouristicDepartureDataResponse"/>
</operation>
<operation name="getListCategory">
<input wsam:Action="controller/Publisher/getListCategoryRequest" message="tns:getListCategory"/>
<output wsam:Action="controller/Publisher/getListCategoryResponse" message="tns:getListCategoryResponse"/>
</operation>
<operation name="changeActivityState" parameterOrder="activityId activityState">
<input wsam:Action="controller/Publisher/changeActivityStateRequest" message="tns:changeActivityState"/>
<output wsam:Action="controller/Publisher/changeActivityStateResponse" message="tns:changeActivityStateResponse"/>
</operation>
<operation name="getListActivityStated">
<input wsam:Action="controller/Publisher/getListActivityStatedRequest" message="tns:getListActivityStated"/>
<output wsam:Action="controller/Publisher/getListActivityStatedResponse" message="tns:getListActivityStatedResponse"/>
</operation>
<operation name="getPurchase">
<input wsam:Action="controller/Publisher/getPurchaseRequest" message="tns:getPurchase"/>
<output wsam:Action="controller/Publisher/getPurchaseResponse" message="tns:getPurchaseResponse"/>
</operation>
<operation name="getPurchaseList">
<input wsam:Action="controller/Publisher/getPurchaseListRequest" message="tns:getPurchaseList"/>
<output wsam:Action="controller/Publisher/getPurchaseListResponse" message="tns:getPurchaseListResponse"/>
</operation>
</portType>
<binding name="PublisherPortBinding" type="tns:Publisher">
<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc"/>
<operation name="getProviderList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="checkCredentials">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="existsNick">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="existsEmail">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="existsName">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="filterByString">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListUser">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getTouristList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getUserData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="updateUser">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="followUser">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="unFollowUser">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="markFavoriteActivty">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="unMarkFavoriteActivity">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerUser">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registeTouristicActivity">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerTouristicDeparture">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerTouristicBundle">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerDepartment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerInscription">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="registerPurchase">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListDepartment">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getTouristicActivityData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getDeparturesByActivity">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListTouristicDeparture">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListTouristicBundle">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getTouristicBundleData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="addTouristicActivityToBundle">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getTouristicDepartureData">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListCategory">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="changeActivityState">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getListActivityStated">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getPurchase">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
<operation name="getPurchaseList">
<soap:operation soapAction=""/>
<input>
<soap:body use="literal" namespace="controller"/>
</input>
<output>
<soap:body use="literal" namespace="controller"/>
</output>
</operation>
</binding>
<service name="PublisherService">
<port name="PublisherPort" binding="tns:PublisherPortBinding">
<soap:address location="http://localhost:8181/controller"/>
</port>
</service>
</definitions>